buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// Spring Boot plugin adds a numerous hardcoded dependencies in the version much lower then Corda expects
// causing the problems in runtime. Those can be changed by manipulating above properties
// See https://github.com/spring-gradle-plugins/dependency-management-plugin/blob/master/README.md#changing-the-value-of-a-version-property
ext['artemis.version'] = "$artemis_version"
ext['hibernate.version'] = "$hibernate_version"

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'maven-publish'
apply plugin: 'application'

mainClassName = 'net.corda.irs.IRSDemo'

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    demoArtifacts.extendsFrom testRuntime
}

dependencies {
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile project(path: ":samples:irs-demo:cordapp", configuration: "demoArtifacts")
    compile project(":samples:irs-demo:web")
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }

    testCompile project(':node-driver')
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:${assertj_version}"
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory "./build/nodes"
    node {
        name "O=Notary Service,L=Zurich,C=CH"
        notary = [validating: true]
        p2pPort 10002
        rpcPort 10003
        webPort 10004
        cordapps = ["$project.group:finance:$corda_release_version"]
        useTestClock true
    }
    node {
        name "O=Bank A,L=London,C=GB"
        p2pPort 10005
        rpcPort 10006
        webPort 10007
        cordapps = ["$project.group:finance:$corda_release_version"]
        useTestClock true
    }
    node {
        name "O=Bank B,L=New York,C=US"
        p2pPort 10008
        rpcPort 10009
        webPort 10010
        cordapps = ["$project.group:finance:$corda_release_version"]
        useTestClock true
    }
}

bootRepackage {
    enabled = false
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}