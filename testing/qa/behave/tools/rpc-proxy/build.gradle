/*
 * R3 Proprietary and Confidential
 *
 * Copyright (c) 2018 R3 Limited.  All rights reserved.
 *
 * The intellectual and technical concepts contained herein are proprietary to R3 and its suppliers and are protected by trade secret law.
 *
 * Distribution of this file or any portion thereof via any medium without the express permission of R3 is strictly prohibited.
 */

group 'net.corda.behave.tools'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

configurations {
    smokeTestCompile.extendsFrom testCompile
    smokeTestRuntime.extendsFrom testRuntime
}

sourceSets {
    rpcProxy {
        kotlin {
            srcDir "src/main/kotlin"
        }
        resources {
            srcDir "config/dev"
        }
    }
    smokeTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smoke-test/kotlin')
        }
    }
}

dependencies {
    compile project(':test-utils')
    compile "net.corda.plugins:cordform-common:$gradle_plugins_version"

    // Integration test helpers
    testCompile "org.assertj:assertj-core:$assertj_version"
    testCompile "junit:junit:$junit_version"

    compile project(':finance')
    compileOnly project(':node-api')
    compile project(':core')
    compile project(':client:rpc')

    // includes jetty/jersey dependencies used by RPCProxyServer
    compile project(':webserver')

    // Jetty http server
    rpcProxyCompile "org.eclipse.jetty:jetty-servlet:$jetty_version"
    rpcProxyCompile "org.eclipse.jetty:jetty-webapp:$jetty_version"
    rpcProxyCompile "javax.servlet:javax.servlet-api:3.1.0"

    // Jersey for JAX-RS implementation for use in Jetty
    rpcProxyCompile "org.glassfish.jersey.core:jersey-server:$jersey_version"
    rpcProxyCompile "org.glassfish.jersey.containers:jersey-container-servlet-core:$jersey_version"
    rpcProxyCompile "org.glassfish.jersey.containers:jersey-container-jetty-http:$jersey_version"

}

task smokeTest(type: Test) {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task rpcProxyJar(type: Jar) {
    baseName "corda-rpcProxy"
    from {
        configurations.rpcProxyRuntime.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    exclude("META-INF/*.DSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.SF")
    manifest {
        attributes 'Main-Class': 'net.corda.behave.service.proxy.RPCProxyServerKt'
    }
}
