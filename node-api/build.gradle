plugins {
    id 'com.github.johnrengelman.shadow'
}
apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'com.jfrog.artifactory'

description 'Corda node API'

dependencies {
    
    
    compile project(":core")
    compile project(":serialization")  // TODO Remove this once the NetworkBootstrapper class is moved into the tools:bootstrapper module
    compile project(":common-configuration-parsing")

    // Azure KeyVault
    compile 'com.microsoft.azure:azure-keyvault:1.1.1'
    compile 'com.microsoft.azure:adal4j:1.6.3'

    // Utimaco HSM
    compileOnly fileTree(dir: 'lib', include: 'CryptoServer*.jar')
    testCompile fileTree(dir: 'lib', include: 'CryptoServer*.jar')

    // Gemalto Luna HSM
    compileOnly fileTree(dir: 'lib', include: 'LunaProvider.jar')
    testCompile fileTree(dir: 'lib', include: 'LunaProvider.jar')

    // Spotify Docker client for using docker containers in integration tests
    testCompile "com.spotify:docker-client:8.14.5"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // TODO: remove the forced update of commons-collections and beanutils when artemis updates them
    compile "org.apache.commons:commons-collections4:${commons_collections_version}"
    compile "commons-beanutils:commons-beanutils:${beanutils_version}"
    compile "org.apache.activemq:artemis-core-client:${artemis_version}"
    compile "org.apache.activemq:artemis-commons:${artemis_version}"

    compile "io.netty:netty-handler-proxy:$netty_version"

    // For adding serialisation of file upload streams to RPC
    // TODO: Remove this dependency and the code that requires it
    compile "commons-fileupload:commons-fileupload:$fileupload_version"

    // TypeSafe Config: for simple and human friendly config files.
    compile "com.typesafe:config:$typesafe_config_version"

    compile "org.apache.qpid:proton-j:$protonj_version"

    // SQL connection pooling library
    compile "com.zaxxer:HikariCP:$hikari_version"

    // For db migration
    compile "org.liquibase:liquibase-core:$liquibase_version"
    runtime 'com.mattbertolini:liquibase-slf4j:2.0.0'

    // Apache Curator: a client library for Zookeeper
    shadow "org.apache.curator:curator-client:${curator_version}"
    shadow "org.apache.curator:curator-recipes:${curator_version}"
    testCompile "org.apache.curator:curator-test:${curator_version}"

    // ClassGraph: classpath scanning
    compile "io.github.classgraph:classgraph:$class_graph_version"

    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"

    // For caches rather than guava
    compile "com.github.ben-manes.caffeine:caffeine:$caffeine_version"

    // Unit testing helpers.
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:$assertj_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile project(':node-driver')
    testCompile project(':test-utils')

    compile ("org.apache.activemq:artemis-amqp-protocol:${artemis_version}") {
        // Gains our proton-j version from core module.
        exclude group: 'org.apache.qpid', module: 'proton-j'
    }
}

configurations {
    testArtifacts.extendsFrom testRuntime
    testCompile.extendsFrom shadow
}

jar {
    enabled = false
    baseName 'corda-node-api'
}

shadowJar {
    baseName jar.baseName
    configurations = [project.configurations.shadow]
    classifier ""
    // The 'LICENSE' file gets pulled in from multiple dependencies when generating the shadow JAR,
    // and there's also a folder called 'license' being placed in the JAR. On case-insensitive file
    // systems, the folder and file end up clashing, causing an error when trying to build the JAR.
    relocate 'META-INF/LICENSE', 'META-INF/LICENCE-2'
    dependencies {
        // Apache Curator 4.2.0 already contains a shaded copy of Guava 20.0
        include(dependency("org.apache.curator:curator-client:${curator_version}"))
        include(dependency("org.apache.curator:curator-recipes:${curator_version}"))
        include(dependency("org.apache.curator:curator-framework:${curator_version}"))
        include(dependency('org.apache.zookeeper:zookeeper:3.5.4-beta'))
        include(dependency('commons-cli:commons-cli:1.2'))
        include(dependency('io.netty:netty:3.10.5.Final'))
    }
    relocate 'org.apache.curator.', 'net.corda.shaded.org.apache.curator.'
    relocate 'org.apache.zookeeper.', 'net.corda.shaded.org.apache.zookeeper.'
    relocate 'org.apache.jute.', 'net.corda.shaded.org.apache.jute.'
    relocate 'org.apache.commons.', 'net.corda.shaded.org.apache.commons.'
    relocate 'org.jboss.netty.', 'net.corda.shaded.org.jboss.netty.'
}

task testJar(type: Jar) {
    classifier "tests"
    from sourceSets.test.output
}

artifacts {
    testArtifacts testJar
    compile shadowJar
}

publish {
    name shadowJar.baseName
}
