import net.corda.plugins.Cordform

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'

dependencies {
    cordaCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda integration dependencies
    cordaRuntime project(path: ":node:capsule", configuration: 'runtimeArtifacts')
    cordaCompile project(':core')
    cordaCompile project(':client:rpc')
    cordaCompile project(':node-driver')
    compile project(':notary:mysql')
    compile project(':client:mock')
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    compile group: 'io.dropwizard.metrics', name: 'metrics-graphite', version: '3.2.5'
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

def nodeTask = tasks.getByPath(':node:capsule:assemble')
task deployJDBC(type: Cordform, dependsOn: ['jar', nodeTask]) {
    // Nodes require porting from net.corda.notarytest.JDBCNotaryCordform
}

task runTest(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.corda.notarytest.MainKt'
}

jar {
    manifest {
        attributes(
                'Automatic-Module-Name': 'net.corda.notarytest'
        )
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

cordapp {
    info {
        name "net/corda/notarytest"
        vendor "R3"
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion 1
    }
}
